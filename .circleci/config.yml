version: 2.1

jobs:
  #
  # Sync all binbashar forked repos w/ their upstreams
  #
  git-sync-fork-upstream:
    machine:
      image: ubuntu-2004:202201-01 # Ubuntu 20.04, Docker v20.10.12, Docker Compose v1.29.2

      # This job has been blocked because Docker Layer Caching is not available on your plan.
      # Should upgrade if necessary.
      docker_layer_caching: false

    steps:
      - checkout

      - run:
          name: Context Info Cmds
          command: pwd && ls -ltra && git branch

      - run:
          name: git-sync-fork-upstream-ansible
          command: make git-clone-repo-ansible && make git-sync-fork-upstream-ansible

      - run:
          name: git-sync-fork-upstream-docker
          command: make git-clone-repo-docker && make git-sync-fork-upstream-docker

      - run:
          name: git-sync-fork-upstream-terraform
          command: make git-clone-repo-terraform && make git-sync-fork-upstream-terraform

      - run:
          name: git-sync-fork-upstream-git
          command: make git-clone-repo-git && make git-sync-fork-upstream-git

      - run:
          name: git-sync-fork-upstream-refarch
          command: make git-clone-repo-refarch && make git-sync-fork-upstream-refarch

  #
  # Grant all binbashar repo topics are setup
  #
  github-repo-replace-all-topics:
    machine:
      image: ubuntu-2004:202201-01

      docker_layer_caching: false

    steps:
      - checkout

      - run:
          name: Context Info Cmds
          command: pwd && ls -ltra && git branch

      - run:
          name: github-repo-replace-all-topics-ansible
          command: make GITHUB_TOKEN=${GITHUB_OAUTH_ACCESS_TOKEN} github-repo-replace-all-topics-ansible

      - run:
          name: github-repo-replace-all-topics-docker
          command: make GITHUB_TOKEN=${GITHUB_OAUTH_ACCESS_TOKEN} github-repo-replace-all-topics-docker

      - run:
          name: github-repo-replace-all-topics-terraform
          command: make GITHUB_TOKEN=${GITHUB_OAUTH_ACCESS_TOKEN} github-repo-replace-all-topics-terraform

      - run:
          name: github-repo-replace-all-topics-git
          command: make GITHUB_TOKEN=${GITHUB_OAUTH_ACCESS_TOKEN} github-repo-replace-all-topics-git

      - run:
          name: github-repo-replace-all-topics-refarch
          command: make GITHUB_TOKEN=${GITHUB_OAUTH_ACCESS_TOKEN} github-repo-replace-all-topics-refarch

  #
  # Release
  #
  release-version-with-changelog:
    machine:
      image: ubuntu-2004:202201-01 # Ubuntu 20.04, Docker v20.10.12, Docker Compose v1.29.2

      docker_layer_caching: false

    environment:
      VERSION_NUMBER: patch # opts: patch, minor or major.

    steps:
      - checkout

      - run:
          name: Context Info Cmds
          command: pwd && ls -ltra && git branch

      - run:
          name: Initialize Repo Makefiles
          command: |
            make init-makefiles
            git update-index --assume-unchanged "Makefile"

      - run:
          name: Release New Version
          command: |
            if git status | grep 'nothing to commit, working tree clean'; then
              echo "==============================================================================================="
              echo "release-$VERSION_NUMBER-with-changelog-circleci"
              echo "==============================================================================================="
              git config --global user.email "$GIT_USER_EMAIL"
              git config --global user.name "$GIT_USER_NAME"
              git remote add upstream https://github.com/binbashar/le-dev-tools
              make release-$VERSION_NUMBER-with-changelog-circleci
            else
              echo "==============================================================================================="
              echo "Changes in working directory pending to be pushed - please check 'git status' cmd output below "
              echo "==============================================================================================="
              echo "$(git status)"
              echo "==============================================================================================="
            fi

      - slack/notify:
          event: fail
          mentions: '@leverage-support'
          custom: |
            {
              "blocks": [
                {
                  "type": "header",
                  "text": {
                    "type": "plain_text",
                    "text": "Failed Pipeline! :rotating_light::fire::bash-fire::bangbang::video-games-doom-mad::stopp:",
                    "emoji": true
                  }
                },
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": ":negative_squared_cross_mark: *Project*: $CIRCLE_PROJECT_REPONAME \n :negative_squared_cross_mark: *User*: $CIRCLE_USERNAME \n :negative_squared_cross_mark: *Job*: $CIRCLE_JOB in *repo* $CIRCLE_PROJECT_REPONAME \n :negative_squared_cross_mark: *Branch:* $CIRCLE_BRANCH \n :negative_squared_cross_mark: *PR:* $CIRCLE_PULL_REQUEST \n :negative_squared_cross_mark: *Last Commit:* $CIRCLE_SHA1"
                  },
                  "accessory": {
                    "type": "button",
                    "text": {
                      "type": "plain_text",
                      "text": ":arrow_forward: View Job in CircleCi",
                      "emoji": true
                    },
                    "value": "click_me_123",
                    "url": "$CIRCLE_BUILD_URL",
                    "action_id": "button-action"
                  }
                }
              ]
            }
          channel: 'tools-ci'
      - slack/notify:
          event: pass
          custom: |
            {
              "blocks": [
                {
                  "type": "header",
                  "text": {
                    "type": "plain_text",
                    "text": "Successful Pipeline! :checkered_flag: :video-games-star: :video-games-mario-luigi-dance: :tada: :binbash::bb-leverage: :heart: :open-source:",
                    "emoji": true
                  }
                },
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": ":heavy_check_mark: *Project*: $CIRCLE_PROJECT_REPONAME \n :heavy_check_mark: *User*: $CIRCLE_USERNAME \n :heavy_check_mark: *Job*: $CIRCLE_JOB in *repo* $CIRCLE_PROJECT_REPONAME \n :heavy_check_mark: *Branch:* $CIRCLE_BRANCH \n :heavy_check_mark: *PR:* $CIRCLE_PULL_REQUEST \n :heavy_check_mark: *Last Commit:* $CIRCLE_SHA1"
                  },
                  "accessory": {
                    "type": "button",
                    "text": {
                      "type": "plain_text",
                      "text": ":arrow_forward: View Job in CircleCi",
                      "emoji": true
                    },
                    "value": "click_me_123",
                    "url": "$CIRCLE_BUILD_URL",
                    "action_id": "button-action"
                  }
                }
              ]
            }
          channel: 'tools-ci'

#
# CircleCI orbs are open-source, shareable packages of parameterizable reusable
# configuration elements, including jobs, commands, and executors.
#
orbs:
  sumologic: circleci/sumologic@1.0.6
  slack: circleci/slack@4.1.1

#
# Jobs workflow
#
workflows:
  version: 2

  #
  # PR Builded Jobs
  #
  pr_sync_and_release:
    jobs:
      - git-sync-fork-upstream:
          context: binbashar-org-global-context
          filters:
            branches:
             only: # only branches matching the below regex filters will run
               - master
      - github-repo-replace-all-topics:
          context: binbashar-org-global-context
          requires:
            - git-sync-fork-upstream
          filters:
            branches:
             only: # only branches matching the below regex filters will run
               - master
      - release-version-with-changelog:
          context: binbashar-org-global-context
          requires:
            - git-sync-fork-upstream
            - github-repo-replace-all-topics
          filters:
            branches:
             only: # only branches matching the below regex filters will run
               - master
#      - sumologic/workflow-collector:
#          context: binbashar-org-global-context

  #
  # Cron weekly scheduled Jobs
  #
  nightly_sync_and_release:
    triggers:
      - schedule:
          cron: "0 0 * * 0" # At 00:00 on Sunday
          filters:
            branches:
              only:
                - master
    jobs:
      - git-sync-fork-upstream:
          context: binbashar-org-cron-context
          filters:
            branches:
             only: # only branches matching the below regex filters will run
               - master
      - github-repo-replace-all-topics:
          context: binbashar-org-cron-context
          requires:
            - git-sync-fork-upstream
          filters:
            branches:
             only: # only branches matching the below regex filters will run
               - master
      - release-version-with-changelog:
          context: binbashar-org-cron-context
          requires:
            - git-sync-fork-upstream
            - github-repo-replace-all-topics
          filters:
            branches:
             only: # only branches matching the below regex filters will run
               - master
#      - sumologic/workflow-collector:
#          context: binbashar-org-cron-context
#          requires:
#            - release-version-with-changelog
